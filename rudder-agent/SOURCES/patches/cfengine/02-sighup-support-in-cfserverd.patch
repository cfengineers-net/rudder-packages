--- a/cf-serverd/cf-serverd-functions.c	2014-11-26 06:26:51.000000000 +0100
+++ b/cf-serverd/cf-serverd-functions.c	2014-11-28 15:10:21.624969933 +0100
@@ -356,6 +356,14 @@
     Log(LOG_LEVEL_DEBUG, "Checking file updates for input file '%s'",
         config->input_file);
 
+    /* If we force the reload of config, effectively recheck the promises */
+    if ( IsRequestReloadConfig() )
+    {
+        Log(LOG_LEVEL_VERBOSE, "Force reload of inputs files...");
+        GenericAgentCheckPolicy(config, true, true);
+        ClearRequestReloadConfig();
+    }
+
     time_t validated_at = ReadTimestampFromPolicyValidatedFile(config, NULL);
 
     if (config->agent_specific.daemon.last_validated_at < validated_at)
@@ -564,7 +572,7 @@
 
     signal(SIGINT, HandleSignalsForDaemon);
     signal(SIGTERM, HandleSignalsForDaemon);
-    signal(SIGHUP, SIG_IGN);
+    signal(SIGHUP, HandleSignalsForDaemon);
     signal(SIGPIPE, SIG_IGN);
     signal(SIGUSR1, HandleSignalsForDaemon);
     signal(SIGUSR2, HandleSignalsForDaemon);
--- a/libpromises/signals.c	2014-09-18 18:19:54.000000000 +0200
+++ b/libpromises/signals.c	2014-11-28 15:12:30.893560838 +0100
@@ -26,6 +26,7 @@
 
 static bool PENDING_TERMINATION = false; /* GLOBAL_X */
 
+static bool RELOAD_CONFIG = false; /* GLOBAL_X */
 /********************************************************************/
 
 bool IsPendingTermination(void)
@@ -33,6 +34,15 @@
     return PENDING_TERMINATION;
 }
 
+bool IsRequestReloadConfig(void)
+{
+    return RELOAD_CONFIG;
+}
+
+void ClearRequestReloadConfig()
+{
+    RELOAD_CONFIG = false;
+}
 /********************************************************************/
 
 static int SIGNAL_PIPE[2] = { -1, -1 }; /* GLOBAL_C */
@@ -160,7 +170,6 @@
     {
     case SIGTERM:
     case SIGINT:
-    case SIGHUP:
     case SIGSEGV:
     case SIGKILL:
         PENDING_TERMINATION = true;
@@ -171,6 +180,9 @@
     case SIGUSR2:
         LogSetGlobalLevel(LOG_LEVEL_NOTICE);
         break;
+    case SIGHUP:
+        RELOAD_CONFIG = true;
+        break;
     case SIGPIPE:
     default:
         /* No action */
--- a/libpromises/signals.h	2014-04-01 16:41:01.000000000 +0200
+++ b/libpromises/signals.h	2014-11-28 15:10:21.624969933 +0100
@@ -30,6 +30,9 @@
 // check whether the running daemon should terminate after having received a signal.
 bool IsPendingTermination(void);
 
+bool IsRequestReloadConfig(void);
+void ClearRequestReloadConfig();
+
 void MakeSignalPipe(void);
 int GetSignalPipe(void);
 void HandleSignalsForDaemon(int signum);
